# Generated by Django 5.2.3 on 2025-06-26 10:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('coreF2M', '0002_auto_20250626_1133'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('config_key', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('config_value', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'system_configuration',
            },
        ),
        migrations.AlterModelOptions(
            name='conversation',
            options={'ordering': ['-last_message_at', '-updated_at']},
        ),
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='reservation',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='transaction',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveField(
            model_name='notification',
            name='status',
        ),
        migrations.AddField(
            model_name='conversation',
            name='conversation_type',
            field=models.CharField(choices=[('direct', 'Direct Message'), ('product_inquiry', 'Product Inquiry'), ('reservation_discussion', 'Reservation Discussion'), ('support', 'Customer Support')], default='direct', max_length=30),
        ),
        migrations.AddField(
            model_name='conversation',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='last_message_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='related_listing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coreF2M.farmerlisting'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='related_reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='coreF2M.reservation'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='title',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='conversation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreF2M.conversation'),
        ),
        migrations.AddField(
            model_name='notification',
            name='data',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='notification',
            name='is_read',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('reservation_approved', 'Reservation Approved'), ('reservation_rejected', 'Reservation Rejected'), ('reservation_pending', 'Reservation Pending'), ('new_message', 'New Message'), ('product_available', 'Product Available'), ('urgent_sale', 'Urgent Sale'), ('payment_received', 'Payment Received'), ('receipt_uploaded', 'Receipt Uploaded'), ('receipt_verified', 'Receipt Verified'), ('system_announcement', 'System Announcement')], default='system_announcement', max_length=30),
        ),
        migrations.AddField(
            model_name='notification',
            name='read_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreF2M.reservation'),
        ),
        migrations.AddField(
            model_name='notification',
            name='title',
            field=models.CharField(default='Notification', max_length=200),
        ),
        migrations.AddField(
            model_name='notification',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreF2M.transaction'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reservations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reservation',
            name='buyer_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='delivery_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='delivery_method',
            field=models.CharField(choices=[('pickup', 'Pickup from Farmer'), ('delivery', 'Home Delivery')], default='pickup', max_length=20),
        ),
        migrations.AddField(
            model_name='reservation',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='farmer_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='preferred_delivery_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='preferred_pickup_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='rejection_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='reservation',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='transaction',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='delivery_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='delivery_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='delivery_method',
            field=models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery')], default='pickup', max_length=20),
        ),
        migrations.AddField(
            model_name='transaction',
            name='delivery_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='farmer_verification_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='receipt_image',
            field=models.ImageField(blank=True, null=True, upload_to='receipts/'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='receipt_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
        ),
        migrations.AddField(
            model_name='transaction',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('payment_pending', 'Payment Pending'), ('paid', 'Paid'), ('ready_for_pickup', 'Ready for Pickup'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='payment_method',
            field=models.CharField(choices=[('cash', 'Cash Payment'), ('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('other', 'Other')], default='cash', max_length=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='receipt_url',
            field=models.URLField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='reservation',
            field=models.OneToOneField(db_column='reservation_id', on_delete=django.db.models.deletion.CASCADE, to='coreF2M.reservation'),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='status',
            field=models.CharField(choices=[('pending_payment', 'Pending Payment'), ('receipt_uploaded', 'Receipt Uploaded'), ('receipt_verified', 'Receipt Verified'), ('receipt_rejected', 'Receipt Rejected'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending_payment', max_length=20),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('user_registration', 'User Registration'), ('user_login', 'User Login'), ('reservation_created', 'Reservation Created'), ('reservation_approved', 'Reservation Approved'), ('transaction_created', 'Transaction Created'), ('receipt_uploaded', 'Receipt Uploaded'), ('receipt_verified', 'Receipt Verified'), ('message_sent', 'Message Sent'), ('admin_action', 'Admin Action')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('receipt', 'Payment Receipt'), ('product_image', 'Product Image'), ('profile_image', 'Profile Image'), ('document', 'Document'), ('other', 'Other')], max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('related_listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreF2M.farmerlisting')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coreF2M.transaction')),
                ('uploaded_by', models.ForeignKey(db_column='uploaded_by_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_uploads',
                'ordering': ['-created_at'],
            },
        ),
    ]

# Generated by Django 5.2.3 on 2025-06-26 23:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


def add_category_name_index(apps, schema_editor):
    Category = apps.get_model('coreF2M', 'Category')
    with schema_editor.connection.cursor() as cursor:
        cursor.execute("SHOW INDEX FROM coreF2M_category WHERE Key_name = 'category_name_idx'")
        if not cursor.fetchone():
            schema_editor.add_index(
                Category,
                models.Index(fields=['name'], name='category_name_idx')
            )


class Migration(migrations.Migration):

    dependencies = [
        ('coreF2M', '0006_remove_buyerprofile_buyer_profile_user_type_and_more'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='category',
            name='category_name_title_case',
        ),
        migrations.AddField(
            model_name='category',
            name='approval_status',
            field=models.CharField(
                choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')],
                default='pending',
                max_length=20
            ),
        ),
        migrations.AddField(
            model_name='category',
            name='approved_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='category',
            name='approved_by',
            field=models.ForeignKey(
                blank=True,
                help_text='Admin who approved this category',
                limit_choices_to={'user_type': 'Admin'},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='approved_categories',
                to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(
                default=1,
                help_text='Farmer who created this category',
                limit_choices_to={'user_type': 'Farmer'},
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='description',
            field=models.TextField(
                blank=True,
                help_text='Description of the category',
                max_length=500,
                null=True
            ),
        ),
        migrations.AddField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(
                max_length=100,
                validators=[django.core.validators.RegexValidator(
                    message='Category name can only contain letters, spaces, ampersands, and hyphens',
                    regex='^[a-zA-Z\\s&-]+$'
                )]
            ),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['created_by', 'approval_status'], name='farmer_category_status_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['approval_status'], name='category_approval_idx'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('name', 'created_by'), name='unique_category_per_farmer'),
        ),
        migrations.RunPython(add_category_name_index),
    ]
